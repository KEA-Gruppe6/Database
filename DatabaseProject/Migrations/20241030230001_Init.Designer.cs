// <auto-generated />
using System;
using Database_project.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database_project.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241030230001_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Database_project.Core.Entities.Airline", b =>
                {
                    b.Property<long>("AirlineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AirlineId"));

                    b.Property<string>("AirlineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirlineId");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Airport", b =>
                {
                    b.Property<long>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AirportId"));

                    b.Property<string>("AirportAbbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirportCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirportId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CustomerId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassportNumber")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Departure", b =>
                {
                    b.Property<long>("DepartureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DepartureId"));

                    b.Property<long>("ArrivalAirportId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartureAirportId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartureId");

                    b.HasIndex("ArrivalAirportId");

                    b.HasIndex("DepartureAirportId");

                    b.ToTable("Departures");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Luggage", b =>
                {
                    b.Property<long>("LuggageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LuggageId"));

                    b.Property<bool>("IsCarryOn")
                        .HasColumnType("bit");

                    b.Property<double>("MaxWeight")
                        .HasColumnType("float");

                    b.Property<long?>("TicketId")
                        .HasColumnType("bigint");

                    b.HasKey("LuggageId");

                    b.HasIndex("TicketId");

                    b.ToTable("Luggage");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Maintenance", b =>
                {
                    b.Property<long>("MaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MaintenanceId"));

                    b.Property<long>("AirportId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlaneId")
                        .HasColumnType("bigint");

                    b.HasKey("MaintenanceId");

                    b.HasIndex("AirportId");

                    b.HasIndex("PlaneId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Plane", b =>
                {
                    b.Property<long>("PlaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PlaneId"));

                    b.Property<long>("AirlineId")
                        .HasColumnType("bigint");

                    b.Property<string>("PlaneDisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlaneId");

                    b.HasIndex("AirlineId");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Ticket", b =>
                {
                    b.Property<long>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TicketId"));

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long>("DepartureId")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("TicketTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("TicketId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DepartureId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Database_project.Core.Entities.TicketType", b =>
                {
                    b.Property<long>("TicketTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TicketTypeId"));

                    b.Property<string>("TicketTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketTypeId");

                    b.ToTable("TicketTypes");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Departure", b =>
                {
                    b.HasOne("Database_project.Core.Entities.Airport", "ArrivalAirport")
                        .WithMany()
                        .HasForeignKey("ArrivalAirportId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Database_project.Core.Entities.Airport", "DepartureAirport")
                        .WithMany()
                        .HasForeignKey("DepartureAirportId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ArrivalAirport");

                    b.Navigation("DepartureAirport");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Luggage", b =>
                {
                    b.HasOne("Database_project.Core.Entities.Ticket", null)
                        .WithMany("Luggage")
                        .HasForeignKey("TicketId");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Maintenance", b =>
                {
                    b.HasOne("Database_project.Core.Entities.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database_project.Core.Entities.Plane", "Plane")
                        .WithMany()
                        .HasForeignKey("PlaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");

                    b.Navigation("Plane");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Plane", b =>
                {
                    b.HasOne("Database_project.Core.Entities.Airline", "Airline")
                        .WithMany("Planes")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Ticket", b =>
                {
                    b.HasOne("Database_project.Core.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database_project.Core.Entities.Departure", "Departure")
                        .WithMany()
                        .HasForeignKey("DepartureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database_project.Core.Entities.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Departure");

                    b.Navigation("TicketType");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Airline", b =>
                {
                    b.Navigation("Planes");
                });

            modelBuilder.Entity("Database_project.Core.Entities.Ticket", b =>
                {
                    b.Navigation("Luggage");
                });
#pragma warning restore 612, 618
        }
    }
}
